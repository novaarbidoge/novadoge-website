<div class="grid-wrapper">
  <section class="cardgrid">
    <slot />
  </section>
</div>

<style>
  .grid-wrapper {
    overflow-x: scroll;
    overflow-y: hidden;
    width: 100vw;
    position: relative;
    scrollbar-width: none;
    mask-image: linear-gradient(
      90deg,
      rgba(0, 0, 0, 0) 0%,
      rgba(0, 0, 0, 1) 10%,
      rgba(0, 0, 0, 1) 90%,
      rgba(0, 0, 0, 0) 100%
    );
    -webkit-mask-image: linear-gradient(
      90deg,
      rgba(0, 0, 0, 0) 0%,
      rgba(0, 0, 0, 1) 10%,
      rgba(0, 0, 0, 1) 90%,
      rgba(0, 0, 0, 0) 100%
    );
  }
  .grid-wrapper::-webkit-scrollbar {
    display: none;
  }
  .cardgrid {
    --x: 0px;
    transition: transform 0.25s linear;
    transform: translateX(var(--x));

    display: flex;
    flex-direction: row;
    width: fit-content;
  }
</style>

<script>
  /* Poniższy kod generuje efekt paralaksy */
  let elem: HTMLElement = document.querySelector(".cardgrid");
  let container = document.querySelector(".grid-wrapper");
  let pos = 0;

  function setPos(delta) {
    pos += (delta / container.clientWidth) * elem.scrollWidth * 1.1;

    /* Ograniczenie ruchu */
    let range = elem.scrollWidth * 0.5; // gwarantuje, że coś będzie zawsze widoczne
    pos = Math.max(-range, Math.min(range, pos));

    elem.style.setProperty("--x", `${pos}px`);
  }

  window.addEventListener("mousemove", (evt) => {
    setPos(-evt.movementX);
  });
  window.addEventListener("resize", (evt) => {
    pos = 0;
    elem.style.setProperty("--x", `0px`);
  });
  document.body.addEventListener("mouseenter", (evt) => {
    pos = 0;
    elem.style.setProperty("--x", `0px`);
  });
</script>
